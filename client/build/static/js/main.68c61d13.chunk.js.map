{"version":3,"sources":["components/Form/Form.js","components/Result/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handleChange","event","a","onChange","target","name","validateFullname","validateDomain","handleSubmit","preventDefault","state","fullNameError","domainError","setState","submitError","onSubmit","fullName","test","domain","includes","className","this","htmlFor","type","id","placeholder","value","Component","Result","emailAddress","App","addAtIfMissing","charAt","axios","post","FullName","toLowerCase","Domain","then","res","response","data","body","catch","error","message","console","log","bind","get","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68c61d13.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Form.scss';\n\nclass Form extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      fullNameError : '',\n      domainError : '',\n      submitError: ''\n    };\n\n  }\n  handleChange = async (event) => {\n    await this.props.onChange(event);\n    switch(event.target.name) {\n      case 'fullName' :\n        this.validateFullname();\n        break;\n      case 'domain' :\n        this.validateDomain();\n        break;\n      default :\n        break;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if(!this.state.fullNameError && !this.state.domainError) {\n      this.props.onSubmit();\n    } else {\n      this.setState({\n        submitError: 'please check your entries'\n      })\n    }\n  }\n\n  validateFullname = () => {\n    let regFullName = /^[a-zA-Z]+ [a-zA-Z]+$/;\n    let fullName = this.props.fullName;\n    if(!regFullName.test(fullName)) {\n      this.setState({\n        fullNameError : 'Please enter a full name (first name and last name separted by a space.'\n      })\n    } else {\n      this.setState({\n        fullNameError : ''\n      })\n    }\n  }\n\n  validateDomain = () => {\n    let domain = this.props.domain;\n    if(!domain.includes('.')) {\n      this.setState({\n        domainError : 'Please enter a valid email domain (e.g. @babbel.com)'\n      })\n    } else {\n      this.setState({\n        domainError : ''\n      })\n    }\n  }\n\n\n  render() {\n    return (\n      <form className=\"input-form\" onSubmit={this.handleSubmit}>\n\n        <label htmlFor=\"fname\">Full name:</label>\n        <input type=\"text\" id=\"name\" name=\"fullName\" placeholder=\"Jeff Mangum\"\n          value={this.props.fullName}\n          onChange={this.handleChange}>\n        </input>\n        <div className=\"fullname_error\">\n        {this.state.fullNameError ? (\n            this.state.fullNameError\n          ) : ('')}\n        </div>\n\n        <label htmlFor=\"lname\">Domain:</label>\n        <input type=\"text\" id=\"domain\" name=\"domain\" placeholder=\"@babbel.com\"\n          value={this.props.domain}\n          onChange={this.handleChange}>\n        </input>\n        <div className=\"domain_error\">\n        {this.state.domainError ? (\n            this.state.domainError\n          ) : ('')}\n        </div>\n\n        <input type=\"submit\" className=\"submit-button\" value=\"Submit\"></input>\n\n        <div className=\"fullname_error\">\n        {this.state.submitError ? (\n            this.state.submitError\n          ) : ('') }\n        </div>\n\n      </form>\n    );\n  }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport './Result.scss';\n\nclass Result extends Component {\n  \n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"result-header\">\n          I guessss their email is:\n        </h2>\n        <h2 className=\"result\">\n          {this.props.emailAddress}\n        </h2>\n      </div>\n\n    );\n  }\n}\n\nexport default Result;","import React, { Component } from 'react';\nimport './App.scss';\nimport axios from 'axios'\nimport Form from './components/Form/Form';\nimport Result from './components/Result/Result';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      fullName : '',\n      domain : '',\n      emailAddress : '',\n      response: ''\n    };\n  }\n  \n  componentDidMount() {\n    axios.get('/api/v1/ahoy-there').then((res) => {\n      const response = res.data;\n      this.setState({response});\n    });\n  }\n\n  onChange = (event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n      });\n  }\n\n  addAtIfMissing = (domain) => {\n    if (domain.charAt(0) === '@') {\n      return domain;\n    } else {\n      return '@' + domain;\n    }\n  }\n\n  onSubmit = () => {\n    axios.post('/api/v1/ahoy-there', {\n      FullName: this.state.fullName.toLowerCase(),\n      Domain: this.addAtIfMissing(this.state.domain.toLowerCase())\n    })\n    .then((res) => {\n      const response = res.data;\n      this.setState({\n        fullName : '',\n        domain : '',\n        emailAddress : response.body});\n    })\n    .catch(error => {\n      this.setState({ error : error.message });\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <h1>{this.state.response.body}</h1> */}\n        <div className=\"container\">\n          <h1>Email guessser!</h1>\n          <Form\n            fullName={this.state.fullName}\n            domain={this.state.domain}\n            onChange={this.onChange}\n            onSubmit={this.onSubmit}\n          />\n\n          {this.state.emailAddress ? (\n            <Result\n              emailAddress={this.state.emailAddress}\n            />\n          ) : (\n            <div> No result yet :(</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}