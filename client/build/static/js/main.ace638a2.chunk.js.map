{"version":3,"sources":["components/Form/Form.js","components/Result/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Form","handleChange","event","props","onChange","handleSubmit","preventDefault","onSubmit","className","this","htmlFor","type","id","name","placeholder","value","fullName","domain","Component","Result","emailAddress","App","setState","target","console","log","state","axios","post","FullName","Domain","then","res","response","data","body","catch","error","message","bind","get","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TA+BeA,E,4MA3BbC,aAAe,SAACC,GACd,EAAKC,MAAMC,SAASF,I,EAGtBG,aAAe,SAACH,GACdA,EAAMI,iBACN,EAAKH,MAAMI,Y,4CAIb,WACE,OACE,uBAAMC,UAAU,aAAaD,SAAUE,KAAKJ,aAA5C,UAEE,uBAAOK,QAAQ,QAAf,wBACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,KAAK,WAAWC,YAAY,cAAcC,MAAON,KAAKN,MAAMa,SAAUZ,SAAUK,KAAKR,eAElH,uBAAOS,QAAQ,QAAf,qBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,KAAK,SAASC,YAAY,cAAcC,MAAON,KAAKN,MAAMc,OAAQb,SAAUK,KAAKR,eAEhH,uBAAOU,KAAK,SAASH,UAAU,gBAAgBO,MAAM,kB,GArB1CG,aCoBJC,G,6KAlBb,c,oBAGA,WACE,OACE,gCACE,oBAAIX,UAAU,gBAAd,uCAGA,oBAAIA,UAAU,SAAd,SACGC,KAAKN,MAAMiB,sB,GAZDF,cC8ENG,E,kDA1Eb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,SAAW,SAACF,GACV,EAAKoB,SAAL,eACKpB,EAAMqB,OAAOV,KAAOX,EAAMqB,OAAOR,SAvBrB,EA2BnBR,SAAW,WAETiB,QAAQC,IAAI,qBAAuB,EAAKC,MAAMV,SAAW,EAAKU,MAAMT,QACpEU,IAAMC,KAAK,qBAAsB,CAC/BC,SAAU,EAAKH,MAAMV,SACrBc,OAAQ,EAAKJ,MAAMT,SAEpBc,MAAK,SAACC,GACL,IAAMC,EAAWD,EAAIE,KACrBV,QAAQC,IAAIQ,EAASE,MACrB,EAAKb,SAAS,CACZN,SAAW,GACXC,OAAS,GACTG,aAAea,EAASE,UAE3BC,OAAM,SAAAC,GACL,EAAKf,SAAS,CAAEe,MAAQA,EAAMC,UAC9Bd,QAAQC,IAAIY,OAzCd,EAAKjC,SAAW,EAAKA,SAASmC,KAAd,gBAChB,EAAKhC,SAAW,EAAKA,SAASgC,KAAd,gBAEhB,EAAKb,MAAQ,CACXV,SAAW,GACXC,OAAS,GACTG,aAAe,iBACfa,SAAU,IAVK,E,qDAcnB,WAAqB,IAAD,OAClBN,IAAMa,IAAI,sBAAsBT,MAAK,SAACC,GACpC,IAAMC,EAAWD,EAAIE,KACrB,EAAKZ,SAAS,CAACW,kB,oBA+BnB,WACE,OACE,qBAAKzB,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UACE,iDACA,cAAC,EAAD,CACEQ,SAAUP,KAAKiB,MAAMV,SACrBC,OAAQR,KAAKiB,MAAMT,OACnBb,SAAUK,KAAKL,SACfG,SAAUE,KAAKF,WAGhBE,KAAKiB,MAAMN,aACV,cAAC,EAAD,CACEA,aAAcX,KAAKiB,MAAMN,eAG3B,6D,GAnEMF,aCMHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ace638a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Form.scss';\n\nclass Form extends Component {\n  handleChange = (event) => {\n    this.props.onChange(event);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit();\n  }\n\n\n  render() {\n    return (\n      <form className=\"input-form\" onSubmit={this.handleSubmit}>\n\n        <label htmlFor=\"fname\">Full name:</label>\n        <input type=\"text\" id=\"name\" name=\"fullName\" placeholder=\"Jeff Mangum\" value={this.props.fullName} onChange={this.handleChange}></input>\n\n        <label htmlFor=\"lname\">Domain:</label>\n        <input type=\"text\" id=\"domain\" name=\"domain\" placeholder=\"@babbel.com\" value={this.props.domain} onChange={this.handleChange}></input>\n\n        <input type=\"submit\" className=\"submit-button\" value=\"Submit\"></input>\n\n      </form>\n    );\n  }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport './Result.scss';\n\nclass Result extends Component {\n  \n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"result-header\">\n          I guessss their email is:\n        </h2>\n        <h2 className=\"result\">\n          {this.props.emailAddress}\n        </h2>\n      </div>\n\n    );\n  }\n}\n\nexport default Result;","import React, { Component } from 'react';\nimport './App.scss';\nimport axios from 'axios'\nimport Form from './components/Form/Form';\nimport Result from './components/Result/Result';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      fullName : '',\n      domain : '',\n      emailAddress : 'howdy@dogs.com',\n      response: ''\n    };\n  }\n  \n  componentDidMount() {\n    axios.get('/api/v1/ahoy-there').then((res) => {\n      const response = res.data;\n      this.setState({response});\n    });\n  }\n\n  onChange = (event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n      });\n  }\n\n  onSubmit = () => {\n    //replace with api call\n    console.log(\"you are submitting\" + this.state.fullName + this.state.domain);\n    axios.post('/api/v1/ahoy-there', {\n      FullName: this.state.fullName,\n      Domain: this.state.domain\n    })\n    .then((res) => {\n      const response = res.data;\n      console.log(response.body);\n      this.setState({\n        fullName : '',\n        domain : '',\n        emailAddress : response.body});\n    })\n    .catch(error => {\n      this.setState({ error : error.message });\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <h1>{this.state.response.body}</h1> */}\n        <div className=\"container\">\n          <h1>Email guessser!</h1>\n          <Form\n            fullName={this.state.fullName}\n            domain={this.state.domain}\n            onChange={this.onChange}\n            onSubmit={this.onSubmit}\n          />\n\n          {this.state.emailAddress ? (\n            <Result\n              emailAddress={this.state.emailAddress}\n            />\n          ) : (\n            <div> No result yet :(</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}